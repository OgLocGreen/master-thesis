// Auto-generated. Do not edit!

// (in-package action_server_package.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class CompleteRectangleCoverageGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.rect_long = null;
      this.rect_width = null;
      this.step = null;
      this.dist_lr = null;
      this.laser_width = null;
      this.vel = null;
    }
    else {
      if (initObj.hasOwnProperty('rect_long')) {
        this.rect_long = initObj.rect_long
      }
      else {
        this.rect_long = 0.0;
      }
      if (initObj.hasOwnProperty('rect_width')) {
        this.rect_width = initObj.rect_width
      }
      else {
        this.rect_width = 0.0;
      }
      if (initObj.hasOwnProperty('step')) {
        this.step = initObj.step
      }
      else {
        this.step = 0.0;
      }
      if (initObj.hasOwnProperty('dist_lr')) {
        this.dist_lr = initObj.dist_lr
      }
      else {
        this.dist_lr = 0.0;
      }
      if (initObj.hasOwnProperty('laser_width')) {
        this.laser_width = initObj.laser_width
      }
      else {
        this.laser_width = 0.0;
      }
      if (initObj.hasOwnProperty('vel')) {
        this.vel = initObj.vel
      }
      else {
        this.vel = 0.0;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type CompleteRectangleCoverageGoal
    // Serialize message field [rect_long]
    bufferOffset = _serializer.float32(obj.rect_long, buffer, bufferOffset);
    // Serialize message field [rect_width]
    bufferOffset = _serializer.float32(obj.rect_width, buffer, bufferOffset);
    // Serialize message field [step]
    bufferOffset = _serializer.float32(obj.step, buffer, bufferOffset);
    // Serialize message field [dist_lr]
    bufferOffset = _serializer.float32(obj.dist_lr, buffer, bufferOffset);
    // Serialize message field [laser_width]
    bufferOffset = _serializer.float32(obj.laser_width, buffer, bufferOffset);
    // Serialize message field [vel]
    bufferOffset = _serializer.float32(obj.vel, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type CompleteRectangleCoverageGoal
    let len;
    let data = new CompleteRectangleCoverageGoal(null);
    // Deserialize message field [rect_long]
    data.rect_long = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [rect_width]
    data.rect_width = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [step]
    data.step = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [dist_lr]
    data.dist_lr = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [laser_width]
    data.laser_width = _deserializer.float32(buffer, bufferOffset);
    // Deserialize message field [vel]
    data.vel = _deserializer.float32(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 24;
  }

  static datatype() {
    // Returns string type for a message object
    return 'action_server_package/CompleteRectangleCoverageGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '99f0c81406704524af476d87104d837e';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Define the goal
    float32 rect_long
    float32 rect_width
    float32 step
    float32 dist_lr
    float32 laser_width
    
    float32 vel
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new CompleteRectangleCoverageGoal(null);
    if (msg.rect_long !== undefined) {
      resolved.rect_long = msg.rect_long;
    }
    else {
      resolved.rect_long = 0.0
    }

    if (msg.rect_width !== undefined) {
      resolved.rect_width = msg.rect_width;
    }
    else {
      resolved.rect_width = 0.0
    }

    if (msg.step !== undefined) {
      resolved.step = msg.step;
    }
    else {
      resolved.step = 0.0
    }

    if (msg.dist_lr !== undefined) {
      resolved.dist_lr = msg.dist_lr;
    }
    else {
      resolved.dist_lr = 0.0
    }

    if (msg.laser_width !== undefined) {
      resolved.laser_width = msg.laser_width;
    }
    else {
      resolved.laser_width = 0.0
    }

    if (msg.vel !== undefined) {
      resolved.vel = msg.vel;
    }
    else {
      resolved.vel = 0.0
    }

    return resolved;
    }
};

module.exports = CompleteRectangleCoverageGoal;
