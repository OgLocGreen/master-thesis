;; Auto-generated. Do not edit!


(when (boundp 'action_server_package::RectangleCoveragePathPlanningGoal)
  (if (not (find-package "ACTION_SERVER_PACKAGE"))
    (make-package "ACTION_SERVER_PACKAGE"))
  (shadow 'RectangleCoveragePathPlanningGoal (find-package "ACTION_SERVER_PACKAGE")))
(unless (find-package "ACTION_SERVER_PACKAGE::RECTANGLECOVERAGEPATHPLANNINGGOAL")
  (make-package "ACTION_SERVER_PACKAGE::RECTANGLECOVERAGEPATHPLANNINGGOAL"))

(in-package "ROS")
;;//! \htmlinclude RectangleCoveragePathPlanningGoal.msg.html


(defclass action_server_package::RectangleCoveragePathPlanningGoal
  :super ros::object
  :slots (_long_rectangle _width_rectangle _step _dist_lr _width_laser ))

(defmethod action_server_package::RectangleCoveragePathPlanningGoal
  (:init
   (&key
    ((:long_rectangle __long_rectangle) 0.0)
    ((:width_rectangle __width_rectangle) 0.0)
    ((:step __step) 0.0)
    ((:dist_lr __dist_lr) 0.0)
    ((:width_laser __width_laser) 0.0)
    )
   (send-super :init)
   (setq _long_rectangle (float __long_rectangle))
   (setq _width_rectangle (float __width_rectangle))
   (setq _step (float __step))
   (setq _dist_lr (float __dist_lr))
   (setq _width_laser (float __width_laser))
   self)
  (:long_rectangle
   (&optional __long_rectangle)
   (if __long_rectangle (setq _long_rectangle __long_rectangle)) _long_rectangle)
  (:width_rectangle
   (&optional __width_rectangle)
   (if __width_rectangle (setq _width_rectangle __width_rectangle)) _width_rectangle)
  (:step
   (&optional __step)
   (if __step (setq _step __step)) _step)
  (:dist_lr
   (&optional __dist_lr)
   (if __dist_lr (setq _dist_lr __dist_lr)) _dist_lr)
  (:width_laser
   (&optional __width_laser)
   (if __width_laser (setq _width_laser __width_laser)) _width_laser)
  (:serialization-length
   ()
   (+
    ;; float32 _long_rectangle
    4
    ;; float32 _width_rectangle
    4
    ;; float32 _step
    4
    ;; float32 _dist_lr
    4
    ;; float32 _width_laser
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _long_rectangle
       (sys::poke _long_rectangle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _width_rectangle
       (sys::poke _width_rectangle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _step
       (sys::poke _step (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _dist_lr
       (sys::poke _dist_lr (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _width_laser
       (sys::poke _width_laser (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _long_rectangle
     (setq _long_rectangle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _width_rectangle
     (setq _width_rectangle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _step
     (setq _step (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _dist_lr
     (setq _dist_lr (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _width_laser
     (setq _width_laser (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get action_server_package::RectangleCoveragePathPlanningGoal :md5sum-) "fb214e6b9016e277d4f4a781e958ab46")
(setf (get action_server_package::RectangleCoveragePathPlanningGoal :datatype-) "action_server_package/RectangleCoveragePathPlanningGoal")
(setf (get action_server_package::RectangleCoveragePathPlanningGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
float32 long_rectangle
float32 width_rectangle
float32 step
float32 dist_lr
float32 width_laser


")



(provide :action_server_package/RectangleCoveragePathPlanningGoal "fb214e6b9016e277d4f4a781e958ab46")


