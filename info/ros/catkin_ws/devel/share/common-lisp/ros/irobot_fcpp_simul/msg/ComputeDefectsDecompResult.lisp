; Auto-generated. Do not edit!


(cl:in-package irobot_fcpp_simul-msg)


;//! \htmlinclude ComputeDefectsDecompResult.msg.html

(cl:defclass <ComputeDefectsDecompResult> (roslisp-msg-protocol:ros-message)
  ((defecto
    :reader defecto
    :initarg :defecto
    :type irobot_fcpp_simul-msg:defecto
    :initform (cl:make-instance 'irobot_fcpp_simul-msg:defecto)))
)

(cl:defclass ComputeDefectsDecompResult (<ComputeDefectsDecompResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <ComputeDefectsDecompResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'ComputeDefectsDecompResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name irobot_fcpp_simul-msg:<ComputeDefectsDecompResult> is deprecated: use irobot_fcpp_simul-msg:ComputeDefectsDecompResult instead.")))

(cl:ensure-generic-function 'defecto-val :lambda-list '(m))
(cl:defmethod defecto-val ((m <ComputeDefectsDecompResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader irobot_fcpp_simul-msg:defecto-val is deprecated.  Use irobot_fcpp_simul-msg:defecto instead.")
  (defecto m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <ComputeDefectsDecompResult>) ostream)
  "Serializes a message object of type '<ComputeDefectsDecompResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'defecto) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <ComputeDefectsDecompResult>) istream)
  "Deserializes a message object of type '<ComputeDefectsDecompResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'defecto) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<ComputeDefectsDecompResult>)))
  "Returns string type for a message object of type '<ComputeDefectsDecompResult>"
  "irobot_fcpp_simul/ComputeDefectsDecompResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'ComputeDefectsDecompResult)))
  "Returns string type for a message object of type 'ComputeDefectsDecompResult"
  "irobot_fcpp_simul/ComputeDefectsDecompResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<ComputeDefectsDecompResult>)))
  "Returns md5sum for a message object of type '<ComputeDefectsDecompResult>"
  "22caf6dd4a633288d6ebf2e3f7f2ed76")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'ComputeDefectsDecompResult)))
  "Returns md5sum for a message object of type 'ComputeDefectsDecompResult"
  "22caf6dd4a633288d6ebf2e3f7f2ed76")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<ComputeDefectsDecompResult>)))
  "Returns full string definition for message of type '<ComputeDefectsDecompResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Define the result~%defecto defecto~%~%================================================================================~%MSG: irobot_fcpp_simul/defecto~%geometry_msgs/Polygon ros_poly~%defecto_zona[] defecto_divpor_zonas~%~%bool reparado~%~%================================================================================~%MSG: geometry_msgs/Polygon~%#A specification of a polygon where the first and last points are assumed to be connected~%Point32[] points~%~%================================================================================~%MSG: geometry_msgs/Point32~%# This contains the position of a point in free space(with 32 bits of precision).~%# It is recommeded to use Point wherever possible instead of Point32.  ~%# ~%# This recommendation is to promote interoperability.  ~%#~%# This message is designed to take up less space when sending~%# lots of points at once, as in the case of a PointCloud.  ~%~%float32 x~%float32 y~%float32 z~%================================================================================~%MSG: irobot_fcpp_simul/defecto_zona~%geometry_msgs/Polygon ros_poly~%defecto_simple[] trap_vec~%~%int32 direccion_rep~%bool reparado~%int32 zona~%~%================================================================================~%MSG: irobot_fcpp_simul/defecto_simple~%geometry_msgs/Polygon ros_poly~%int32 direccion_rep~%bool reparado~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'ComputeDefectsDecompResult)))
  "Returns full string definition for message of type 'ComputeDefectsDecompResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%# Define the result~%defecto defecto~%~%================================================================================~%MSG: irobot_fcpp_simul/defecto~%geometry_msgs/Polygon ros_poly~%defecto_zona[] defecto_divpor_zonas~%~%bool reparado~%~%================================================================================~%MSG: geometry_msgs/Polygon~%#A specification of a polygon where the first and last points are assumed to be connected~%Point32[] points~%~%================================================================================~%MSG: geometry_msgs/Point32~%# This contains the position of a point in free space(with 32 bits of precision).~%# It is recommeded to use Point wherever possible instead of Point32.  ~%# ~%# This recommendation is to promote interoperability.  ~%#~%# This message is designed to take up less space when sending~%# lots of points at once, as in the case of a PointCloud.  ~%~%float32 x~%float32 y~%float32 z~%================================================================================~%MSG: irobot_fcpp_simul/defecto_zona~%geometry_msgs/Polygon ros_poly~%defecto_simple[] trap_vec~%~%int32 direccion_rep~%bool reparado~%int32 zona~%~%================================================================================~%MSG: irobot_fcpp_simul/defecto_simple~%geometry_msgs/Polygon ros_poly~%int32 direccion_rep~%bool reparado~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <ComputeDefectsDecompResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'defecto))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <ComputeDefectsDecompResult>))
  "Converts a ROS message object to a list"
  (cl:list 'ComputeDefectsDecompResult
    (cl:cons ':defecto (defecto msg))
))
