;; Auto-generated. Do not edit!


(when (boundp 'action_server_package::BaseRotationFeedback)
  (if (not (find-package "ACTION_SERVER_PACKAGE"))
    (make-package "ACTION_SERVER_PACKAGE"))
  (shadow 'BaseRotationFeedback (find-package "ACTION_SERVER_PACKAGE")))
(unless (find-package "ACTION_SERVER_PACKAGE::BASEROTATIONFEEDBACK")
  (make-package "ACTION_SERVER_PACKAGE::BASEROTATIONFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude BaseRotationFeedback.msg.html


(defclass action_server_package::BaseRotationFeedback
  :super ros::object
  :slots (_degrees_rotated ))

(defmethod action_server_package::BaseRotationFeedback
  (:init
   (&key
    ((:degrees_rotated __degrees_rotated) 0.0)
    )
   (send-super :init)
   (setq _degrees_rotated (float __degrees_rotated))
   self)
  (:degrees_rotated
   (&optional __degrees_rotated)
   (if __degrees_rotated (setq _degrees_rotated __degrees_rotated)) _degrees_rotated)
  (:serialization-length
   ()
   (+
    ;; float32 _degrees_rotated
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _degrees_rotated
       (sys::poke _degrees_rotated (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _degrees_rotated
     (setq _degrees_rotated (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get action_server_package::BaseRotationFeedback :md5sum-) "c040fa1e4a8dbeca4b61397439ea933d")
(setf (get action_server_package::BaseRotationFeedback :datatype-) "action_server_package/BaseRotationFeedback")
(setf (get action_server_package::BaseRotationFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
float32 degrees_rotated

")



(provide :action_server_package/BaseRotationFeedback "c040fa1e4a8dbeca4b61397439ea933d")


