;; Auto-generated. Do not edit!


(when (boundp 'irobot_fcpp_simul::ExecuteRectangleFCPPGoal)
  (if (not (find-package "IROBOT_FCPP_SIMUL"))
    (make-package "IROBOT_FCPP_SIMUL"))
  (shadow 'ExecuteRectangleFCPPGoal (find-package "IROBOT_FCPP_SIMUL")))
(unless (find-package "IROBOT_FCPP_SIMUL::EXECUTERECTANGLEFCPPGOAL")
  (make-package "IROBOT_FCPP_SIMUL::EXECUTERECTANGLEFCPPGOAL"))

(in-package "ROS")
;;//! \htmlinclude ExecuteRectangleFCPPGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass irobot_fcpp_simul::ExecuteRectangleFCPPGoal
  :super ros::object
  :slots (_rectangle_id _operation_type _rectangle ))

(defmethod irobot_fcpp_simul::ExecuteRectangleFCPPGoal
  (:init
   (&key
    ((:rectangle_id __rectangle_id) 0)
    ((:operation_type __operation_type) 0)
    ((:rectangle __rectangle) (instance geometry_msgs::Polygon :init))
    )
   (send-super :init)
   (setq _rectangle_id (round __rectangle_id))
   (setq _operation_type (round __operation_type))
   (setq _rectangle __rectangle)
   self)
  (:rectangle_id
   (&optional __rectangle_id)
   (if __rectangle_id (setq _rectangle_id __rectangle_id)) _rectangle_id)
  (:operation_type
   (&optional __operation_type)
   (if __operation_type (setq _operation_type __operation_type)) _operation_type)
  (:rectangle
   (&rest __rectangle)
   (if (keywordp (car __rectangle))
       (send* _rectangle __rectangle)
     (progn
       (if __rectangle (setq _rectangle (car __rectangle)))
       _rectangle)))
  (:serialization-length
   ()
   (+
    ;; int32 _rectangle_id
    4
    ;; int32 _operation_type
    4
    ;; geometry_msgs/Polygon _rectangle
    (send _rectangle :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _rectangle_id
       (write-long _rectangle_id s)
     ;; int32 _operation_type
       (write-long _operation_type s)
     ;; geometry_msgs/Polygon _rectangle
       (send _rectangle :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _rectangle_id
     (setq _rectangle_id (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _operation_type
     (setq _operation_type (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; geometry_msgs/Polygon _rectangle
     (send _rectangle :deserialize buf ptr-) (incf ptr- (send _rectangle :serialization-length))
   ;;
   self)
  )

(setf (get irobot_fcpp_simul::ExecuteRectangleFCPPGoal :md5sum-) "93e42b79de0e56f88bd428b2bd59ee26")
(setf (get irobot_fcpp_simul::ExecuteRectangleFCPPGoal :datatype-) "irobot_fcpp_simul/ExecuteRectangleFCPPGoal")
(setf (get irobot_fcpp_simul::ExecuteRectangleFCPPGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
#int32 chapa_id
int32 rectangle_id #0,90,180,270

int32 operation_type

geometry_msgs/Polygon rectangle



================================================================================
MSG: geometry_msgs/Polygon
#A specification of a polygon where the first and last points are assumed to be connected
Point32[] points

================================================================================
MSG: geometry_msgs/Point32
# This contains the position of a point in free space(with 32 bits of precision).
# It is recommeded to use Point wherever possible instead of Point32.  
# 
# This recommendation is to promote interoperability.  
#
# This message is designed to take up less space when sending
# lots of points at once, as in the case of a PointCloud.  

float32 x
float32 y
float32 z
")



(provide :irobot_fcpp_simul/ExecuteRectangleFCPPGoal "93e42b79de0e56f88bd428b2bd59ee26")


